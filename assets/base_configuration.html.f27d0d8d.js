import{r as o,o as n,c as t,a as e,e as r,F as p,b as s,d as c}from"./app.5b6d861f.js";import{_ as l}from"./plugin-vue_export-helper.21dcd24c.js";const i={},d=e("h1",{id:"base-configuration",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#base-configuration","aria-hidden":"true"},"#"),s(" Base configuration")],-1),u=s("One can configure "),h={href:"https://vuepress.vuejs.org/config/",target:"_blank",rel:"noopener noreferrer"},b=s("quite some aspects"),f=s(" of a VuePress app, to tailor it to ones desires. The custom/explicit configuration is expected to reside by default in a file "),g=e("code",null,"docs/.vuepress/config.js",-1),v=s(", e.g. with the following base contents,"),_=c(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&quot;Hello World!&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">description</span><span class="token operator">:</span> <span class="token string">&quot;A &#39;Hello World&#39; VuePress app&quot;</span>
    <span class="token literal-property property">base</span><span class="token operator">:</span> <span class="token string">&quot;/&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">themeConfig</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">sidebar</span><span class="token operator">:</span> <span class="token string">&#39;auto&#39;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>The configuration is essentially a JavaScript module, holding a configuration object.</p><p>The values for <code>base</code> and <code>sidebar</code> are the defaults, therefore these keys can be omitted.</p><h2 id="the-base-url" tabindex="-1"><a class="header-anchor" href="#the-base-url" aria-hidden="true">#</a> The <code>base</code> URL</h2><p>By default the value for <code>base</code> is <code>&quot;/&quot;</code>, stating that you can view the app, e.g. locally via <code>npx vuepress dev docs</code> at <code>http://localhost:&lt;port&gt;/</code>. However if you would like to serve your app from a folder, e.g. <code>hello-world</code>, than you should configure <code>base</code> to have the value <code>&quot;/hello-world/&quot;</code>. Consequently the app can be accessed via <code>http://localhost:&lt;port&gt;/hello-world/</code>.</p><p>Note, serving the app locally via <code>http-server</code>, instead of the builtin magic of <code>vuepress dev</code>, one should build the app with <code>npx vuepress build --dest docs/.vuepress/dist/hello-world/ docs</code>. After that, one can serve it via <code>npx http-server --port &lt;port&gt; ./docs/.vuepress/dist</code>, and access it at <code>http://localhost:&lt;port&gt;/hello-world/</code>.</p>`,6);function k(m,y){const a=o("ExternalLinkIcon");return n(),t(p,null,[d,e("p",null,[u,e("a",h,[b,r(a)]),f,g,v]),_],64)}var w=l(i,[["render",k]]);export{w as default};
